# Variables required for this Makefile
ROOT_DIR = $(shell dirname $(realpath $(firstword $(MAKEFILE_LIST))))
VERSION = $(shell git describe --tags | cut -c 2-)
GO_ENV_VARS =

PKG_FILENAME = aerospike-prometheus-exporter
FIPS_PKG_FILENAME = aerospike-prometheus-exporter-federal
CENTOS_8 = $(shell cat /etc/*-release | grep "PRETTY_NAME" | sed 's/PRETTY_NAME=//g' | grep -i "CentOS" | grep -i "Linux 8")
RHEL_8 = $(shell cat /etc/*-release | grep "PRETTY_NAME" | sed 's/PRETTY_NAME=//g' | grep -i "Red Hat" | grep -i "Linux 8")

# FIPS required evaluations
GO_VERSION = $(shell go version)
GO_FIPS =

APE_SUPPORTED_OS = invalid-os

ifeq ( , $(findstring go1.20,$(GO_VERSION) go_not_20 ))
        GO_BORINGCRYPTO=
        # check if OS is CentOS 8 or RHEL 8
        ifeq ($(CENTOS_8),)
	         ifneq ($(RHEL_8),)
			      APE_SUPPORTED_OS = validfipsos
		      else
			      APE_SUPPORTED_OS = not-validfipsos
		      endif
	      else
		         APE_SUPPORTED_OS = validfipsos
         endif
        # end OS check

else
        # If Go version is >=1.20 we auto-support FIPS build
        APE_SUPPORTED_OS = validfipsos
        GO_BORINGCRYPTO=boringcrypto
endif

# end FIPS required evaluations

# Variables related to go build

ifdef GOOS
GO_ENV_VARS = GOOS=$(GOOS)
endif

ifdef GOARCH
GO_ENV_VARS += GOARCH=$(GOARCH)
endif

GO_ENV_VARS += CGO_ENABLED=0

DOCKER_MULTI_ARCH_PLATFORMS = linux/amd64,linux/arm64
