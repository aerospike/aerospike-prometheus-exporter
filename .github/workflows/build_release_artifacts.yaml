# This workflow will build a golang project
# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Build exporter deb,rpm and tgz artifacts 

on: 
  push:
    # branches: [master]
    # TODO this combination logic of branch + tag is not working.
    tags:
       - v*

permissions:
  id-token: write
  actions: write
  contents: write

jobs:
      
    amd64_job:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - uses: actions-ecosystem/action-get-latest-tag@v1
          id: get-latest-tag

        - name: Set up Snyk CLI
          uses: snyk/actions/setup@master
    
        - name: Authenticate Snyk
          run: snyk auth ${{ secrets.SNYK_TOKEN }}

        - name: Install Dependencies for FPM
          run: |
            sudo apt-get update
            sudo apt-get install -y ruby ruby-dev build-essential rpm
  
        - name: Install FPM and Verify version
          run: |
            sudo gem install --no-document fpm
            fpm --version
            
        - name: Build amd64 / x86 specific artifact
          id: build-x86-artifact
          run: |
            make package-linux-amd64

        - name: Upload Release Asset
          env:
            GH_TOKEN: ${{ github.token }}
            TAG_NAME: "${{ steps.get-latest-tag.outputs.tag }}"
          run: |
             # echo "tag_name $TAG_NAME"
             echo
             
             files=$(find pkg/target -type f -name "aerospike-prome*" -printf "$(realpath -s %p) ")
         
             for file in $files; do
               echo "uploading file === $file to release-tag $TAG_NAME"
               gh release upload "$TAG_NAME" "$file"
             done   

    arm64_job:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0
        - uses: actions-ecosystem/action-get-latest-tag@v1
          id: get-latest-tag

        - name: Set up Snyk CLI
          uses: snyk/actions/setup@master
    
        - name: Authenticate Snyk
          run: snyk auth ${{ secrets.SNYK_TOKEN }}

        - name: Install Dependencies for FPM
          run: |
            sudo apt-get update
            sudo apt-get install -y ruby ruby-dev build-essential rpm
  
        - name: Install FPM and Verify version
          run: |
            sudo gem install --no-document fpm
            fpm --version
            
        - name: Build arm64v8 specific artifact
          id: build-arm64-artifact
          run: |
            make package-linux-arm64

        - name: Upload Release Asset
          env:
            GH_TOKEN: ${{ github.token }}
            TAG_NAME: "${{ steps.get-latest-tag.outputs.tag }}"
          run: |
             # echo "tag_name $TAG_NAME"
             echo
             
             files=$(find pkg/target -type f -name "aerospike-prome*" -printf "$(realpath -s %p) ")
         
             for file in $files; do
               echo "uploading file === $file to release-tag $TAG_NAME"
               gh release upload "$TAG_NAME" "$file"
             done   

    tar_job:
      runs-on: ubuntu-latest    
      steps:
        - uses: actions/checkout@v3
          with:
            fetch-depth: 0

        - uses: actions-ecosystem/action-get-latest-tag@v1
          id: get-latest-tag

        - name: Install Dependencies for FPM
          run: |
            sudo apt-get update
            sudo apt-get install -y ruby ruby-dev build-essential rpm
  
        - name: Install FPM and Verify version
          run: |
            sudo gem install --no-document fpm
            fpm --version

        - name: Set up Go
          uses: actions/setup-go@v3
          with:
             go-version: 1.20.2
    
        - name: go mod tidy
          run: |
              dpkg-architecture -q DEB_BUILD_ARCH
              (git describe --tags --always --abbrev=0 | cut -c 1-)
              go mod tidy
          
        - name: Build tar files
          id: build-tar-artifact
          run: |
              echo "Current working directory ".$PWD
              echo
              echo "Build Directory is ".$BUILD_DIR
              make tar GOOS=linux GOARCH=amd64 ARCH=x86_64
              make tar GOOS=linux GOARCH=arm64 ARCH=aarch64

        - name: gzip tar files
          run: |
            cd pkg/target   
            ls -lrt *.tar
            echo "GZipping tar files"
            gzip aerospike-prometheus-exporter*.tar 
            echo "gzipped files"
            ls -lrt *.tar.gz
            # find in current folder i.e. pkg/target all files to move as tgz
            files=$(find . -type f -name "aerospike-prome*" -printf "$(realpath -s %p) ")
            for file in $files; do
               echo "gzipping file === $file "
               mv "$file" "${file%.tar.gz}.tgz"
            done  
            ls -lrt *.tgz
        - name: Upload Release Asset
          env:
            GH_TOKEN: ${{ github.token }}
            TAG_NAME: "${{ steps.get-latest-tag.outputs.tag }}"
          run: |
             # echo "tag_name $TAG_NAME"
             echo
             
             files=$(find pkg/target -type f -name "aerospike-prome*" -printf "$(realpath -s %p) ")
         
             for file in $files; do
               echo "uploading file === $file to release-tag $TAG_NAME"
               gh release upload "$TAG_NAME" "$file"
             done   